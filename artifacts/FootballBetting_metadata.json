{
	"compiler": {
		"version": "0.8.26+commit.8a97fa7a"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"inputs": [
					{
						"internalType": "uint8",
						"name": "_matchId",
						"type": "uint8"
					},
					{
						"internalType": "string",
						"name": "_score",
						"type": "string"
					}
				],
				"name": "addScore",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "closeBetting",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "commissionPercentage",
				"outputs": [
					{
						"internalType": "uint8",
						"name": "",
						"type": "uint8"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint8",
						"name": "_id",
						"type": "uint8"
					},
					{
						"internalType": "string",
						"name": "_home",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "_away",
						"type": "string"
					}
				],
				"name": "createMatch",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getAllMatches",
				"outputs": [
					{
						"components": [
							{
								"internalType": "uint8",
								"name": "id",
								"type": "uint8"
							},
							{
								"internalType": "string",
								"name": "homeTeam",
								"type": "string"
							},
							{
								"internalType": "string",
								"name": "awayTeam",
								"type": "string"
							},
							{
								"internalType": "string",
								"name": "score",
								"type": "string"
							},
							{
								"internalType": "uint256",
								"name": "totalHomeBets",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "totalAwayBets",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "totalDrawBets",
								"type": "uint256"
							},
							{
								"internalType": "address[]",
								"name": "bettors",
								"type": "address[]"
							},
							{
								"internalType": "bool",
								"name": "isSettled",
								"type": "bool"
							}
						],
						"internalType": "struct FootballBetting.Match[]",
						"name": "",
						"type": "tuple[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getBettingState",
				"outputs": [
					{
						"internalType": "enum FootballBetting.BettingState",
						"name": "",
						"type": "uint8"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getMyBets",
				"outputs": [
					{
						"components": [
							{
								"internalType": "uint256",
								"name": "amount",
								"type": "uint256"
							},
							{
								"internalType": "enum FootballBetting.MatchOutcome",
								"name": "team",
								"type": "uint8"
							}
						],
						"internalType": "struct FootballBetting.Bet[]",
						"name": "",
						"type": "tuple[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "openBetting",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint8",
						"name": "_matchId",
						"type": "uint8"
					},
					{
						"internalType": "enum FootballBetting.MatchOutcome",
						"name": "_team",
						"type": "uint8"
					}
				],
				"name": "placeBet",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "resetMatches",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "settleAllMatches",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {
				"settleAllMatches()": {
					"notice": "The main settlement function for the owner. Iterates through all matches and settles any that have a score and are not already settled. This is the only function the owner needs to call to trigger all payouts."
				}
			},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"server.sol": "FootballBetting"
		},
		"evmVersion": "cancun",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"server.sol": {
			"keccak256": "0xe6aaeb743cd505479185a3d7512ae98d39d3f82c33155ade9c3cceab55364e2b",
			"license": "MIT",
			"urls": [
				"bzz-raw://9dec06c4a8f911656e202e35aa152a383c38c297ac0e6feb39151118a4abe7db",
				"dweb:/ipfs/QmPXDEBtJr5Vh15AyeZRgYunWxaawbaFVEy6Ko1XLArN7R"
			]
		}
	},
	"version": 1
}